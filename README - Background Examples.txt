In the code is a variable "All_BGS" - This variable stores A SINGLE Background

Edit All_BGS with the data below to get different examples
====================
Anyway, some examples:

//Titanic Ant from Earthbound, render a single background that's resized to the size of the screen
All_BGS              = [ OrderedDict  ( [ ('DoOnceFailSafe', True), ('DoOnceLoading', True), ('DoOncePalette', True), ('IsRendered',True),  ('Source',      BACKGROUND),    ('Texture',    None), ('IsTiled',False),    ('IsResizedPostTiling',True), ('TileType',0), ('IsResized',True), ('ForceWidth',DEFAULT_WIDTH), ('ForceHeight',DEFAULT_HEIGHT), ('TexWidth',216),  ('TexHeight',215), ('TexXPos',16), ('TexYPos',0), ('TexFlippedX',False), ('TexFlippedY',False), ('TexRot', 0), ('SineAmp',8), ('SineFreq',16), ('SineSpeed',1), ('SineXChange', 0 + (Global_Timer % 10 /10)), ('SineYChange',0.0), ('SineSize',1), ('SineIgnoreLines',1),   ('SineTime',Global_Timer), ('SineXMult',1.0), ('SineYMult',0.0), ('SineVert',False), ('SineLoops',True), ('SineXOffset',0), ('SineYOffset',0),   ('WaveType',sin), ('SinePaused', False), ('PaletteIsScroll', True),    ('ScrollBaseID', 64), ('ScrollTime', 15), ('ScrollColors', [(96, 16, 112), (64, 16, 96), (96, 16, 64)] ), ('ScrollAmount', 0), ('ScrollPingPong', True), ('ScrollBackwards', False), ('NonScrollColors', [(0,0,0), (255,255,255) ]), ('NonScrollIDs', [0,10] ) ] ),]

// Render the Color Palette, stretched to size of the screen - Loops, scrolls vertically only
All_BGS              = [ OrderedDict  ( [ ('DoOnceFailSafe', True), ('DoOnceLoading', True), ('DoOncePalette', True), ('IsRendered',True),  ('Source',      BACKGROUND),    ('Texture',    None), ('IsTiled',False),    ('IsResizedPostTiling',False), ('TileType',0), ('IsResized',True), ('ForceWidth',DEFAULT_WIDTH), ('ForceHeight',DEFAULT_HEIGHT), ('TexWidth',16),  ('TexHeight',16), ('TexXPos',0), ('TexYPos',0), ('TexFlippedX',False), ('TexFlippedY',False), ('TexRot', 0), ('SineAmp',8), ('SineFreq',16), ('SineSpeed',1), ('SineXChange', 0), ('SineYChange',0.0), ('SineSize',1), ('SineIgnoreLines',1),   ('SineTime',Global_Timer), ('SineXMult',0), ('SineYMult',1.0), ('SineVert',False), ('SineLoops',True), ('SineXOffset',0), ('SineYOffset',0),   ('WaveType',sin), ('SinePaused', False), ('PaletteIsScroll', True),    ('ScrollBaseID', 64), ('ScrollTime', 15), ('ScrollColors', [(96, 16, 112), (64, 16, 96), (96, 16, 64)] ), ('ScrollAmount', 0), ('ScrollPingPong', True), ('ScrollBackwards', False), ('NonScrollColors', [(0,0,0), (255,255,255) ]), ('NonScrollIDs', [0,10] ) ] ),]


// Render a checkerboard pattern, repeats till edge of screen and loops, no sine wave, only translation
// In addition, one color changes colors due to the use of Scrolling Colors. Resized to 64^2 from 16^2

All_BGS              = [ OrderedDict  ( [ ('DoOnceFailSafe', True), ('DoOnceLoading', True), ('DoOncePalette', True), ('IsRendered',True),  ('Source',      BACKGROUND),    ('Texture',    None), ('IsTiled',False),    ('IsResizedPostTiling',False), ('TileType',0), ('IsResized',True), ('ForceWidth',DEFAULT_WIDTH), ('ForceHeight',DEFAULT_HEIGHT), ('TexWidth',16),  ('TexHeight',16), ('TexXPos',0), ('TexYPos',16), ('TexFlippedX',False), ('TexFlippedY',False), ('TexRot', 0), ('SineAmp',8), ('SineFreq',16), ('SineSpeed',1), ('SineXChange', 1), ('SineYChange',1.0), ('SineSize',1), ('SineIgnoreLines',1),   ('SineTime',Global_Timer), ('SineXMult',0), ('SineYMult',0), ('SineVert',False), ('SineLoops',True), ('SineXOffset',0), ('SineYOffset',0),   ('WaveType',sin), ('SinePaused', False), ('PaletteIsScroll', True),    ('ScrollBaseID', 64), ('ScrollTime', 15), ('ScrollColors', [(96, 16, 112), (64, 16, 96), (96, 16, 64)] ), ('ScrollAmount', 0), ('ScrollPingPong', True), ('ScrollBackwards', False), ('NonScrollColors', [(0,0,0), (255,255,255) ]), ('NonScrollIDs', [0,10] ) ] ),]

// Render a marble pattern with color shifts between blue and red, it also scrolls horizontally instead
// Uses color palette IDs 64 to 80 for the color effect

All_BGS              = [ OrderedDict  ( [ ('DoOnceFailSafe', True), ('DoOnceLoading', True), ('DoOncePalette', True), ('IsRendered',True),  ('Source',      BACKGROUND),    ('Texture',    None), ('IsTiled',True),    ('IsResizedPostTiling',False), ('TileType',0), ('IsResized',True), ('ForceWidth',64), ('ForceHeight',64), ('TexWidth',32),  ('TexHeight',32), ('TexXPos',358), ('TexYPos',19), ('TexFlippedX',False), ('TexFlippedY',False), ('TexRot', 0), ('SineAmp',8), ('SineFreq',16), ('SineSpeed',1), ('SineXChange', 0), ('SineYChange',0), ('SineSize',1), ('SineIgnoreLines',1),   ('SineTime',Global_Timer), ('SineXMult',1), ('SineYMult',0), ('SineVert',True), ('SineLoops',True), ('SineXOffset',0), ('SineYOffset',0),   ('WaveType',sin), ('SinePaused', False), ('PaletteIsScroll', True),    ('ScrollBaseID', 64), ('ScrollTime', 3), ('ScrollColors', [(16, 0, 250), (32, 0, 220), (48, 0, 180), (64, 0, 120), (80, 0, 80), (96, 0, 20), (112, 0, 0), (128, 0, 0), (144, 0, 0), (160, 0, 0), (176, 0, 0), (192, 0, 0), (208, 0, 0), (224, 0, 0), (240, 0, 0), (255, 0, 0), (255, 16, 0),  ] ), ('ScrollAmount', 0), ('ScrollPingPong', True), ('ScrollBackwards', False), ('NonScrollColors', [(0,0,0), (255,255,255) ]), ('NonScrollIDs', [0,10] ) ] ),]


// Demonstrate the effects of having a high YMult, sine data begins to loop on itself and look interesting
All_BGS              = [ OrderedDict  ( [ ('DoOnceFailSafe', True), ('DoOnceLoading', True), ('DoOncePalette', True), ('IsRendered',True),  ('Source',      BACKGROUND),    ('Texture',    None), ('IsTiled',True),    ('IsResizedPostTiling',False), ('TileType',0), ('IsResized',False), ('ForceWidth',64), ('ForceHeight',64), ('TexWidth',103),  ('TexHeight',103), ('TexXPos',390), ('TexYPos',19), ('TexFlippedX',False), ('TexFlippedY',False), ('TexRot', 0), ('SineAmp',8), ('SineFreq',16), ('SineSpeed',1), ('SineXChange', 0), ('SineYChange',0), ('SineSize',1), ('SineIgnoreLines',1),   ('SineTime',Global_Timer), ('SineXMult',2), ('SineYMult',3), ('SineVert',False), ('SineLoops',True), ('SineXOffset',32), ('SineYOffset',32),   ('WaveType',sin), ('SinePaused', False), ('PaletteIsScroll', True),    ('ScrollBaseID', 64), ('ScrollTime', 3), ('ScrollColors', [(16, 0, 250),  ] ), ('ScrollAmount', 0), ('ScrollPingPong', True), ('ScrollBackwards', False), ('NonScrollColors', [(0,0,0), (255,255,255) ]), ('NonScrollIDs', [0,10] ) ] ),]


// Render something with interlacing lines, LOOKS BETTER ON SMALL SCREEN
All_BGS              = [ OrderedDict  ( [ ('DoOnceFailSafe', True), ('DoOnceLoading', True), ('DoOncePalette', True), ('IsRendered',True),  ('Source',      BACKGROUND),    ('Texture',    None), ('IsTiled',True),    ('IsResizedPostTiling',False), ('TileType',0), ('IsResized',False), ('ForceWidth',64), ('ForceHeight',64), ('TexWidth',55),  ('TexHeight',55), ('TexXPos',395), ('TexYPos',130), ('TexFlippedX',False), ('TexFlippedY',False), ('TexRot', 0), ('SineAmp',8), ('SineFreq',16), ('SineSpeed',1), ('SineXChange', 0), ('SineYChange',0), ('SineSize',1), ('SineIgnoreLines',2),   ('SineTime',Global_Timer), ('SineXMult', 1), ('SineYMult', 1), ('SineVert',False), ('SineLoops',True), ('SineXOffset',0), ('SineYOffset',0),   ('WaveType',sin), ('SinePaused', False), ('PaletteIsScroll', True),    ('ScrollBaseID', 64), ('ScrollTime', 3), ('ScrollColors', [(16, 0, 250),  ] ), ('ScrollAmount', 0), ('ScrollPingPong', True), ('ScrollBackwards', False), ('NonScrollColors', [(0,0,0), (255,255,255) ]), ('NonScrollIDs', [0,10] ) ] ),]
